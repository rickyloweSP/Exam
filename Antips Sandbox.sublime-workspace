{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"re",
				"return"
			],
			[
				"Customer",
				"Customer__c"
			],
			[
				"RT",
				"RTInfo"
			],
			[
				"DS",
				"DSE__DS_Source_No__c"
			],
			[
				"DSE__D",
				"DSE__DS_Master_Bean__c"
			],
			[
				"DSE__",
				"DSE__DS_Master_Bean__c"
			],
			[
				"DSE",
				"DSE__DS_Source__c"
			],
			[
				"DSE__DS_Master",
				"DSE__DS_Master_Bean__c"
			],
			[
				"DSE__DS_c",
				"DSE__DS_Custom_Field_6__c"
			],
			[
				"DSE__DS_Cus",
				"DSE__DS_Custom_Field_6__c"
			],
			[
				"Mark",
				"Marketing_Consent__c\t[Sobject Name]"
			],
			[
				"DSE__DS_",
				"DSE__DS_Bean__c"
			],
			[
				"BookingPa",
				"BookingPaxList"
			],
			[
				"Varian",
				"VarianceSelected"
			],
			[
				"Cons",
				"Consult"
			],
			[
				"resul",
				"resultFormat"
			],
			[
				"pa",
				"PaxOrVal"
			],
			[
				"u",
				"PUBLIC UpDrillDown\tBoolean"
			],
			[
				"sty",
				"styleClass\t(String)"
			],
			[
				"out",
				"apex:outputLink"
			],
			[
				"lin",
				"apex:commandLink"
			],
			[
				"DSE__DS_Ma",
				"DSE__DS_master_Bean__c"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/classes/Travel_Group_Helper.cls",
			"settings":
			{
				"buffer_size": 1754,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/classes/Recalculate_Next_Payment_Date_Scheduled.cls",
			"settings":
			{
				"buffer_size": 419,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/classes/Recalculate_Next_Payment_Date_Batch.cls",
			"settings":
			{
				"buffer_size": 748,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/classes/Helper_Class.cls",
			"settings":
			{
				"buffer_size": 3085,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/classes/Recalaulate_Next_Payment_Date_Test.cls",
			"settings":
			{
				"buffer_size": 1169,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/classes/Test_Data_Factory.cls",
			"settings":
			{
				"buffer_size": 2396,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "@isTest(SeeAllData=true)\npublic class ServiceHelperTests {\n    static testmethod void testInsertServiceFeature(){\n        List<RecordType> FamilyRecordTypeID = [select id from recordType where name = 'Family Group' limit 1];\n        List<RecordType> CompanyRecordTypeID = [select id from recordType where name = 'Company' limit 1];\n        List<RecordType> IndividualRecordTypeID = [select id from recordType where name = 'Individual' limit 1 ];\n        \n        Account myAccount = [select id,Family_Group__c,OwnerId from Account where RecordTypeId=:CompanyRecordTypeId[0].Id limit 1];\n        Account Indiv = [select id from Account where RecordTypeId=:IndividualRecordTypeId[0].Id  and Family_Group__c=:myAccount.Family_Group__c limit 1];\n        Opportunity opp = new Opportunity(Name='Test Opp',AccountId = myAccount.Family_Group__c,Billing_Head_Entity__c=myAccount.Id,\n                                          Signing_Authority__c = myAccount.OwnerId,Engagement_Contacts__c=Indiv.Id,StageName='Draft',\n                                          Commencement_Date__c=Date.today(),CloseDate=Date.today()+44);\n        insert opp;\n        \n        \n        \n        /*Feature__c newFeatures = new Feature__c(Name='XYZ',Description__c='XYZ is a test Feature');\n        insert newFeatures;\n        Feature__c newFeatures2 = new Feature__c(Name='ABC',Description__c='ABC is a test Feature');\n        insert newFeatures2;*/\n        \n        Service__c newService = new Service__c(Name='Test Service',Engagement__c=opp.id,Service__c='Futures',Features__c='Farm Futures;Business Futures',Family_Group__c=myAccount.Family_Group__c);\n        insert newService;\n        \n        newService.Features__c='Business Futures';\n        update newService;\n        \n        newService.Features__c='';\n        update newService;\n        \n        newService.Features__c='Farm Futures';\n        update newService;\n        \n        \n    }\n}",
			"settings":
			{
				"buffer_size": 1921,
				"line_ending": "Unix",
				"name": "@isTest(SeeAllData=true)"
			}
		},
		{
			"contents": "/*\n * Holds methods for creating test data\n *\n*/\n@isTest\npublic with sharing class Test_Data_Factory {\n\n    /**\n\t * @description map of account Record types\n\t **/\n    public static map<string,Id> accountRecordTypes{\n        get{\n            if(accountRecordTypes == null){\n                accountRecordTypes = new map<string,Id>();\n                for(RecordType RT: [SELECT DeveloperName,Id FROM RecordType WHERE SobjectType = 'Account']){\n                    accountRecordTypes.put(RT.DeveloperName, RT.Id);\n                }\n            }\n            return accountRecordTypes;\n        }\n    }\n    \n\t/**\n\t * @description create and insert a Business Account of a specific record type\n\t * @param numberToCreate - integer - for bulk testing\n\t * @param ID RT - the ID of the record type\n\t * @return list of the Accounts inserted\n\t **/\n\tpublic static List<Account> createBusinessAccountWithRecordType(integer numberToCreate, ID RT, ID parentID){\n\n\t\tList<Account> AccList = new List<Account>();\n\n\t\tfor(Integer i = 0; i < numberToCreate; i++) {\n\t\t\tAccount Acc = new Account();\n\t\t\tAcc.name = string.valueOf(i);\n            Acc.Family_Group__c = parentID;\n            Acc.RecordTypeId = RT;\n\t\t\tAccList.add(Acc);\n\t\t}\n\t\t\n\t\tinsert AccList;\n\t\treturn AccList;\n\t}\n    \n    \t/**\n\t * @description create and insert a Business Account of a specific record type\n\t * @param numberToCreate - integer - for bulk testing\n\t * @param ID RT - the ID of the record type\n\t * @return list of the Accounts inserted\n\t **/\n\tpublic static List<Account> createPersonAccountWithRecordType(integer numberToCreate, ID RT, ID parentID){\n\n\t\tList<Account> AccList = new List<Account>();\n\n\t\tfor(Integer i = 0; i < numberToCreate; i++) {\n\t\t\tAccount Acc = new Account();\n\t\t\tAcc.FirstName = string.valueOf(i);\n            Acc.LastName = string.valueOf(i);\n            Acc.Family_Group__c = parentID;\n            Acc.RecordTypeId = RT;\n\t\t\tAccList.add(Acc);\n\t\t}\n\t\t\n\t\tinsert AccList;\n\t\treturn AccList;\n\t}\n \n    /**\n\t * @description create and insert a Family Account\n\t * @return list of the Accounts inserted\n\t **/\n    @isTest\n    public static List<Account> createFamilyGroup(){\n        ID RTID = accountRecordTypes.get('Family_Group');\n        system.assert(RTID != null);\n        return createBusinessAccountWithRecordType(1, RTID, null); \n    }\n\n    /**\n\t * @description create and insert a Family Account\n\t * @return list of the Accounts inserted\n\t **/\n    public static List<Account> createCompany(ID parentID){\n        ID RTID = accountRecordTypes.get('Pty_Ltd');\n        system.assert(RTID != null);\n        return createBusinessAccountWithRecordType(1, RTID, parentID);\n    }\n    \n    /**\n\t * @description create and insert a Individual Account\n\t * @return list of the Accounts inserted\n\t **/\n    public static List<Account> createIndividual(ID parentID){\n        ID RTID = accountRecordTypes.get('Individual');\n        system.assert(RTID != null);\n        return createPersonAccountWithRecordType(1, RTID, parentID);\n    }\n\n    /**\n\t * @description create and insert an engagement\n\t * @return list of the engagement inserted\n\t **/\n    public static Opportunity createEngagement(ID familyGroupID, ID BillingHeadEntity, ID Individual){\n        Opportunity opp = new Opportunity(\n            Name\t\t\t\t\t\t='Test Opp',\n            AccountId \t\t\t\t\t= familyGroupID,\n            Billing_Head_Entity__c \t\t= BillingHeadEntity,\n\t\t\t//Signing_Authority__c \t\t= myAccount.OwnerId,\n            Engagement_Contacts__c\t\t= Individual,\n            StageName\t\t\t\t\t= 'Draft',\n\t\t\tCommencement_Date__c\t\t= Date.today(),\n            CloseDate\t\t\t\t\t= Date.today()+44);\n        insert opp;\n        return opp;\n    } \n    \n    /**\n\t * @description create and insert a Product\n\t * @return list of the product inserted\n\t **/\n    public static void addProductToList(ID OppId, ID familyGroup, string productName, String Features){\n        Service__c newService = new Service__c(\n            Name\t\t\t\t= 'Test Service',\n            Engagement__c\t\t= OppId,\n            Service__c\t\t\t= productName,\n            Features__c\t\t\t= Features,\n            Family_Group__c\t\t= familyGroup);\n        productList.add(newService);\n    }\n    \n    /**\n\t * @description product list\n\t **/\n    public static list<Service__c> productList{\n        get{\n            if (productList == null){\n                productList = new list<Service__c>();\n            }\n            return productList;\n        }\n    }\n    \n    /**\n\t * @description insert product list\n\t **/\n    public static list<Service__c> insertProductList(){\n        if(productList.size() > 0) insert productList;\n        return productList;\n    }\n    \n    /**\n\t * @description add feature to list\n\t **/\n    /*public static void addFeatureToList(string featureName, String ProductName){\n        feature__c newFeature = new feature__c(\n            Name\t\t\t= featureName,\n            Service__c \t\t= ProductName,\n        \tDescription__c \t= 'test Description');\n        featureList.add(newFeature);\n    }*/\n    \n    /**\n\t * @description feature list\n\t **/\n    public static list<feature__c> featureList{\n        get{\n            if (featureList == null){\n                featureList = new list<feature__c>();\n            }\n            return featureList;\n        }\n    }\n    \n    /**\n\t * @description insert feature list\n\t **/\n    public static list<feature__c> insertFeatureList(){\n        if(featureList.size() > 0) insert featureList;\n        return featureList;\n    }\n        \n}",
			"settings":
			{
				"buffer_size": 5442,
				"line_ending": "Unix",
				"name": "/*"
			}
		},
		{
			"contents": "@isTest(SeeAllData=false)\nglobal class ServiceHelperTests {\n    \n    /**\n\t * @description insert a new product with features\n\t **/\n    static testmethod void testInsertProduct(){\n        //setup test data\n        testSetupMethod();\n        \n        //insert product\n\t\tTest_Data_Factory.addProductToList(engagement.ID, fam[0].ID, 'Futures', 'Farm Futures;Business Futures');\n        list<service__c> products = Test_Data_Factory.insertProductList();\n        \n\t\t//check that the ProductFeature records have been created for 'Farm Futures' and 'Business Futures'\n        list<Service_Feature__c> SFs = [SELECT Engagement__c,Feature__c,Feature__r.name,Feature__r.Service__c,Id,Service__c FROM Service_Feature__c WHERE Service__c = :products[0].ID];\n        system.assert(SFs.size() == 2);\n        for(Service_Feature__c SF : SFs){\n            system.assert(SF.Feature__r.Service__c == 'Futures');\n        }    \n       \n       \t//reset the recursion variable\n        ServiceHelper.isExecuting = false;\n        \n        //update product\n        products[0].Features__c = 'Farm Futures';\n        update products;\n       \t    \n       \t//check that the 'Farm Futures' record is still there and the 'Business Futures' has been deleted\n        list<Service_Feature__c> SFs2 = [SELECT Engagement__c,Feature__c,Feature__r.name,Feature__r.Service__c,Id,Service__c FROM Service_Feature__c WHERE Service__c = :products[0].ID];\n        system.assert(SFs2.size() == 1);\n        for(Service_Feature__c SF : SFs2){\n            system.assert(SF.Feature__r.Service__c == 'Futures');\n            system.assert(SF.Feature__r.name == 'Farm Futures');\n        } \n    }\n    \n    /**\n\t * @description test bulk insert of products\n\t **/\n    static testmethod void testInsertProductBulk(){\n\t\t//setup test data\n        testSetupMethod();\n        \n        //insert product\n\t\tTest_Data_Factory.addProductToList(engagement.ID, fam[0].ID, 'Futures', 'Farm Futures;Business Futures');\n        Test_Data_Factory.addProductToList(engagement.ID, fam[0].ID, 'Tax Management', 'Payroll Tax');\n        Test_Data_Factory.addProductToList(engagement.ID, fam[0].ID, 'Tax Management', 'Year End Planning (YEP)');\n        list<service__c> products = Test_Data_Factory.insertProductList();\n        \n        //check that the ProductFeature records have been created \n        list<Service_Feature__c> SFs = [SELECT Engagement__c,Feature__c,Feature__r.name,Feature__r.Service__c,Id,Service__c FROM Service_Feature__c WHERE Service__r.Engagement__c = :engagement.ID];\n        system.assert(SFs.size() == 4);\n    }\n    \n    /**\n\t * @description create test data for engagement testing\n\t **/\n    static list<account> fam;\n    static list<account> indie;\n    static list<account> company;\n    static Opportunity engagement;\n    static list<feature__c> features;\n    @testSetup static void testSetupMethod() {\n\t\t\n        //create family group\n\t\tfam = Test_Data_Factory.createFamilyGroup();\n        \n        //create individual\n        indie = Test_Data_Factory.createIndividual(fam[0].ID);\n        system.assert(indie[0].Family_Group__c != null);\n        \n        //create company\n        company = Test_Data_Factory.createCompany(fam[0].ID);\n        system.assert(company[0].Family_Group__c != null);\n        \n        //create engagement\n        engagement = Test_Data_Factory.createEngagement(fam[0].ID, company[0].ID, indie[0].id);\n        \n        //create features\n        /*Test_Data_Factory.addFeatureToList('Farm Futures', 'Futures');\n        Test_Data_Factory.addFeatureToList('Business Futures', 'Futures');\n        Test_Data_Factory.addFeatureToList('Payroll Tax', 'Tax Management');\n        Test_Data_Factory.addFeatureToList('Year End Planning (YEP)', 'Tax Management');\n        \n        features = Test_Data_Factory.insertFeatureList();*/\n    }\n}",
			"settings":
			{
				"buffer_size": 3804,
				"line_ending": "Unix",
				"name": "@isTest(SeeAllData=false)"
			}
		},
		{
			"contents": "public class ServiceHelper {\n    public static boolean isExecuting = false;\n    \n    //inner class for features\n    public class Features{\n        public string featureName;\n        public string serviceName;\n        public string serviceFeatureCombined;\n        public ID productID;\n        public string engagementID;\n    }\n    \n    public static void insertServiceFeatures(List<Service__c> newServices){\n        /*String ServiceId = '';\n        String EngagementId ='';\n        if(ServiceHelper.isExecuting){\n            return;\n        }\n        ServiceHelper.isExecuting=true;\n\t\t\n        set<string> featureNames = new set<string>();\n        set<string> productNames = new set<string>();\n        list<Features> theFeatures = new list<Features>();\n        \n        //loop round new services and add the feature names and product name to two separate lists\n        for(Service__c sc: newServices){\n            if(sc.Features__c != null){\n                for(string feat : sc.Features__c.Split(';')){\n                    Features feature = new Features();\n                    feature.featureName = feat;\n                    feature.serviceName = sc.Service__c;\n                    feature.serviceFeatureCombined = feature.featureName + feature.serviceName;\n                    feature.productID = sc.id;\n                    feature.engagementID = ((string) sc.Engagement__c).left(15);\t//will it fail if null?\n                    theFeatures.add(feature);\n                    featureNames.add(feat);\n                }\n                productNames.add(sc.Service__c);\n            } \n        }\n        \n        //if there are no features then end here\n        if(theFeatures.size() == 0) return;\n        \n        //get features and combine the feature name and service name together in a map\n        map<string, ID> featureNameAndServiceToId = new map<string, ID>();\n        for(Feature__c myFeatures :[select id, Service__c, name from feature__c where name IN: featureNames AND Service__c IN: productNames]){\n            string serviceFeatureCombined = myFeatures.name + myFeatures.Service__c;\n            featureNameAndServiceToId.put(serviceFeatureCombined, myFeatures.ID);\n        }\n        \n        //Loop round theFeatures and get the Features ID from the map\n        List<Service_Feature__c> myServiceFeatures = new List<Service_Feature__c>();\n        for(Features Feat: theFeatures){\n            string featureId = featureNameAndServiceToId.get(Feat.serviceFeatureCombined);\n            if(featureId != null){\n                Service_Feature__c SF = new Service_Feature__c();\n                SF.Feature__c = featureId;\n                SF.Engagement__c = Feat.engagementID;\n                SF.Service__c = Feat.productID;\n                myServiceFeatures.add(SF);\n            } \n        }\n        \n        insert myServiceFeatures; \n*/\n    }\n    \n    public static void updateServiceFeatures(map<ID, Service__c> oldServices,map<ID, Service__c> newServices){\n        map<id, Service__c> changedServices = new map<id, Service__c>();\n        \n        //find the services where the features have changed\n        for(Service__c service : newServices.values()){\n            Service__c oldService = oldServices.get(service.ID);\n            if(service.Features__c != oldService.Features__c || service.Service__c != oldService.Service__c){\n                changedServices.put(service.ID, service);\n            }\n        }\n        \n        //if there are any feature changes\n        if(changedServices.size() > 0){\n            //delete the service features attached to the service\n        \tdelete[select id from Service_Feature__c where Service__c IN: changedServices.keySet()];\n            \n            //insert the new values\n            insertServiceFeatures(changedServices.values());\n        }\n        \n    }\n}",
			"settings":
			{
				"buffer_size": 3812,
				"line_ending": "Unix",
				"name": "public class ServiceHelper {"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Snippet: ",
		"selected_items":
		[
			[
				"Snippet: ",
				"Snippet: Soql builder"
			],
			[
				"Snippet: soq",
				"Snippet: Soql builder"
			],
			[
				"ins",
				"Package Control: Install Package"
			]
		],
		"width": 494.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/rickylowe/Dropbox (Personal)/MavensMate Workspace/Antips Sandbox"
	],
	"file_history":
	[
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/Antips Sandbox/apex-scripts/1am Shedule.cls",
		"/Users/rickylowe/Dropbox (Personal)/Code/Apex/Helper_Class.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/Antips Sandbox/src/classes/sendHTMLEmailPlugin.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/Antips Sandbox/src/classes/Recalculate_Next_Payment_Date_Batch.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/Antips Sandbox/apex-scripts/getRequiredFields.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/Antips Sandbox/src/classes/Trigger_Handler_Test.cls",
		"/Users/rickylowe/Library/Application Support/Sublime Text 3/Packages/User/Test Data Creator",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/Antips Sandbox/src/classes/Recalculate_Next_Payment_Date_Scheduled.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/Antips Sandbox/apex-scripts/RunRecalulateBatchJob.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/Antips Sandbox/apex-scripts/getSoql.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/Antips Sandbox/src/classes/Travel_Group_Member_Trigger_Handler.cls",
		"/Users/rickylowe/Library/Application Support/Sublime Text 3/Packages/User/Soql builder.sublime-snippet",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/Antips Sandbox/src/classes/Travel_Group_Helper.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/XeroTestData.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/XeroIntegrationServiceTest.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/XeroInvoiceTestData.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/apex-scripts/AccountInvestigation.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/XeroInvoiceIntegrationExtension.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/XeroIntegrationService.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/XeroIntegrationSetupController.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/XeroObjects.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/apex-scripts/GetXeroAccounts.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/apex-scripts/GetInvoice.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/Util.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/Aha_Test.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/apex-scripts/deleteLoggedTime.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/apex-scripts/syncFeaturesAndLoggedTime.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/apex-scripts/runProductSynch.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/Aha_Util.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/Aha_Objects.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/AhaIntegrationLoggingService.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/apex-scripts/queries.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/Aha_API.cls",
		"/Users/rickylowe/Downloads/Aha_TestAuditsResponse.json",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/Aha_DeleteScheduler.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/XeroIntegrationControllerTest.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/SP_AhaTriggerUtil.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/SP_AhaTriggerUtilTest.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/SOW_test.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/Aha_TestData.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/XeroInvoiceLineItemsExtension.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/Aha_SyncFeaturesLoggedTimeScheduler.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes/Aha_SyncProductsReleasesScheduler.cls",
		"/Users/rickylowe/Downloads/Finance Data POC/FinancialsComponent.js",
		"/Users/rickylowe/Downloads/Finance Data POC/FinancialsComponent.cmp",
		"/Users/rickylowe/Downloads/Finance Data POC/HelperClassPrivliage.apxc",
		"/Users/rickylowe/Downloads/Finance Data POC/PrivliageQueryController.apxc",
		"/Users/rickylowe/Movies/Before I Go To Sleep - S.J. Watson,Mobi, KK/Before I Go to Sleep_ A Novel - S. J. Watson.mobi",
		"/Users/rickylowe/Downloads/retrieve_09S36000007exCKEAY/classes/Task_Trigger_Handler.cls-meta.xml",
		"/Users/rickylowe/Downloads/retrieve_09S36000007exCKEAY/classes/Task_Trigger_Handler.cls",
		"/Users/rickylowe/Dropbox (Personal)/Force IDE Workplace/TTC FullCopy/Referenced Packages/Forcecom_Migration_Tool/package.xml",
		"/Users/rickylowe/Dropbox (Personal)/Code Snippets/Querying Records/wrapper class to quickly set the variables",
		"/Users/rickylowe/Dropbox (Personal)/Code Snippets/Querying Records/dynamic building of query",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/MDM_Person_Account_Conversion_Class.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/triggers/MDM_MasterBean_trigger.trigger",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Account_Trigger_Handler.cls-meta.xml",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Account_Trigger_Handler.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/TriggerHandler.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/triggers/Account_Trigger.trigger",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Bean_trigger_helper.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/triggers/Bean_Trigger.trigger",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/triggers/Bean_Trigger.trigger-meta.xml",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/triggers/EventTrigger.trigger",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Request_Trigger_Helper.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/triggers/Request_Trigger.trigger",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Marketing_Consent_Handler_Class.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/TriggerHandlerV2.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Booking_Passenger_Trigger_Helper.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/triggers/Account_Trigger.trigger-meta.xml",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Lead_Trigger_Handler.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/AttachmentTriggerHandler.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/s_CheckRecursionOnTriggers.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Marketing_Consent_Trigger_Handler.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Pre_Registration_Trigger_Helper.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Questionnaire_Trigger_Helper.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/triggers/Lead_Trigger.trigger",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/MDM_Custom_Synch_Class.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/MDM_Helper_Class.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/MDM_Recursion_Handler.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Marketing_Consent_Archive.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Lead_Conversion.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/AttachmentTriggerHandler.cls-meta.xml",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/ActivitiesByBrand_Controller.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/ActivityBrandStamping_Tests.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/pages/Request_Activities.page",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/components/ActivitiesByBrand.component",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/pages/Account_Activities.page",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Activities_Controller_Extension.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/NoteTriggerHandler.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/pages/Lead_Activities.page",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/pages/Opportunity_Activities.page",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/pages/ActivitiesByBrandMore.page",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/pages/Contact_Activities.page",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/pages/Brand_Logo_Page.page",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Static_test.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/MDM_Account_Creation_Test.cls",
		"/Users/rickylowe/Downloads/bean helper backup",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - V3/src/classes/Brand_logo_Controller.cls",
		"/Users/rickylowe/Downloads/LABSegment.csv",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/MDM_Custom_Synch_Class.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/Bean_trigger_helper.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/YTD_Report_Test_Code_V3.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/YTD_Report_Controller_V2.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/pages/YTD_Page_V2.page",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/pages/YTD_Page.page",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/Agency_Production_V2.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/Agency_Production_Report_Extension.cls-meta.xml",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/Agency_Production_Report_Extension.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/YTD_Report_Test_code_V2.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/YTD_Report_Test_code.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/YTD_Report_Test_code.cls-meta.xml",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/YTD_Report_Test_code_V2.cls-meta.xml",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/Aggregate.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/Aggregate_AgencyProd.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC FullCopy New/src/classes/YTD_Report_Controller.cls",
		"/Users/rickylowe/Downloads/YTD workaround backup",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - New/src/classes/MDM_Person_Account_Conversion_Class.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - New/src/triggers/MDM_MasterBean_trigger.trigger",
		"/Users/rickylowe/Downloads/person Account MB Code OLD",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - New/src/classes/MDM_Account_Creation_Test.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - New/src/classes/Account_Trigger_Handler.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - New/src/triggers/Account_Trigger.trigger",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - New/src/classes/YTD_Report_Controller.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - New/src/classes/YTD_Report_Test_code_V2.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - New/src/classes/MDM_Helper_Class.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - New/src/classes/Booking_Passenger_Trigger_Helper.cls",
		"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/TTC CP2 - New/src/classes/Request_Trigger_Helper.cls",
		"/Users/rickylowe/Downloads/Batch Job Test - Empty Recycling Bin"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/rickylowe/Dropbox (CloudPerspective Ltd)/MavensMate Workspace/SP Partial Sand/src/classes"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Travel_Group__c",
			"Opp",
			"OppList",
			"Opportunity",
			"Travel_Group__c",
			";",
			"{1}",
			"createLineItems",
			"Xero_Integration_Setting__mdt",
			"xeroInvoiceLineItems",
			"XeroInvoiceLineItem",
			"xeroInvoiceId",
			"getInvoice",
			"xc",
			"getInvoice",
			"AccountCode",
			"account",
			"sendInvoiceToXero",
			"690-WIP",
			"200-CRM",
			"retrieveAhaFeaturesLoggedTimes",
			"createProjects",
			"resource",
			"time_tracking_events",
			"LoggedTime",
			"StaticResourceCalloutMock",
			"AHA_SETTINGS",
			"queryAhaAPIForRecords",
			"getSFDCAhaFeature",
			"SFDCAhaFeaturesLoggedTimes",
			"setCon",
			"TimesheetWrapper",
			"prod",
			"Customers",
			"includeSelectorFields",
			"m_enforceCRUD",
			"newQueryFactory",
			"buildQuerySObjectById",
			"select",
			"RecordTypes",
			"RecordTypeNames",
			"RecordTypes",
			"Create_Update_Account__c = false",
			"ObjectType",
			"SourceID",
			"prefMap.get",
			"prefMap",
			"sourceID",
			"upsert",
			"addToMap",
			"SObjectUnitOfWork",
			"MorePageSize",
			"SourceObjectType",
			"SObjectType",
			"SourceObjectType",
			"hello",
			"SourceObjectType",
			"SourceRecordName",
			"ParentRecordID",
			"GetSOQLDateString",
			"TaskType",
			"attachment",
			"sObjectType",
			"RecordTypeNames",
			"DefaultPersonRT",
			"RecordTypeNames",
			"DSE__DS_Custom_Field_5__c",
			"GetSOQLDateString",
			"query =",
			"GetSOQLDateString",
			"activitywlist",
			"item",
			"LABABEAT",
			"LABAALIC",
			"LABAARTH",
			"LABABEAT",
			"\\n",
			" ",
			"private int",
			"int",
			"\\n ",
			"\\n",
			"SourceToRecordType",
			"Summary_analysis_2__c",
			"Summary_analysis__c",
			"Summary_analysis_2__c",
			"YTD_Report_Controller",
			"Summary_Analysis__c",
			"(string) ",
			"SA.",
			"SA",
			"Summary_Analysis__c",
			"LastModifiedDate = LAST_N_DAYS:2",
			"TurnOffCMDMAccountTrigger",
			"proccess",
			"TurnOffMasterBeanTrigger",
			"oldMap",
			"isinsert",
			"TurnOffCMDMAccountTrigger",
			"MBListThatCausedEnrichment",
			"TurnOffBeforeMB",
			"AfterMBUpdate",
			"UpsertBeans",
			"newMBs",
			"LastModifiedDate = LAST_N_DAYS:2",
			"LastModifiedDate >= YESTERDAY",
			"BuildSegment",
			"opportunity",
			"TaskType",
			"Opportunity",
			"accountid",
			"whatid",
			"whoid",
			"Opportunity",
			"Account",
			"s_RefreshList",
			"s_GetMoreRecords",
			"getActivitywList",
			"removecommon",
			"FindMatchedBeans",
			"MMBean",
			"Bean",
			"ConvertedLeads",
			"AND LastModifiedDate",
			"AND LastModifiedDate = TODAY",
			"hasExecuted",
			"lead",
			"ObjectType"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"Payment_Schedule__c",
			"Acc",
			"AccList",
			"Account",
			"Opportunity",
			"\\n",
			"proj",
			"SourceObjectType",
			"note",
			"DSE__DS_Custom_Field_20__c",
			"\\nsettingsMap.put(\"",
			"\\n\"",
			"\", new settingsHolder(\"F\", 200, 100));\\n",
			"",
			"private int",
			"\\n",
			";\\n",
			"\\n int ",
			"\\n int",
			"Summary_analysis_2__c",
			"Summary_analysis__c",
			"YTD_Report_Controller_V2",
			"Summary_Analysis_2__c",
			"(decimal) ",
			"SA.get('",
			"Summary_Analysis_2__c",
			"Process",
			"LastModifiedDate = LAST_N_DAYS:2 AND Active__c = TRUE",
			"LastModifiedDate = LAST_N_DAYS:2",
			"MBean",
			"AND LastModifiedDate >= YESTERDAY",
			"oldLead",
			"LeadInst",
			"Lead",
			"sobj",
			"LeadInst",
			"Lead",
			"Leads",
			"MDM_Account_Creation_Setting__c",
			"Lead",
			"accountid",
			"Booking_Passenger__c",
			"pax",
			"Bookingpax",
			"Request__c",
			"req",
			"Hotel__c",
			"Dlog.BlankLog(",
			"RecordTypes",
			"PersonSynchList",
			"Account",
			"Aggregate_AgencyProd",
			"GroupedByName",
			"GroupedByVal",
			"GroupedBy",
			"GroupedByVal",
			"OrderByVal",
			"b2b2b2",
			"cccccc",
			"#cccccc",
			"RowName",
			"Reports_Common_Code.formatTheCurrency",
			"",
			"decimal",
			"",
			"boolean",
			"sobj",
			"sobject",
			"",
			"Integer",
			"string",
			"name",
			"Acc",
			"Integer",
			"_FPPax",
			"Nov",
			"Oct",
			"Sep",
			"Aug",
			"Jul",
			"Jun",
			"Apr",
			"Mar",
			"public",
			"s_Tools",
			"CCC.AllAnalysisConfig",
			"C.hidefilters",
			"FieldTypes",
			"C.",
			"s_ConsoleCommonCode.",
			"s_ConsoleCommonCode",
			"C.",
			"global",
			"",
			"CCC.CurrentFilterRow",
			"CCC.hidefilterlogic",
			"CCC.",
			"CCC.AcceptFilters()",
			"CCC.filterCreator()",
			"CCC.FieldTypes",
			"Configuration",
			"Config.get('Filter_Field_1__c')",
			" if(Config.get('Filter_Field_1__c') !=null) FField[0] = ConfigVar.Filter_Field_1__c; else FField[0] = '';\n        if(Config.get('Filter_Field_1__c') !=null) FField[1] = Config.get('Filter_Field_1__c'); else FField[1] = '';\n        if(ConfigVar.Filter_Field_3__c !=null) FField[2] = ConfigVar.Filter_Field_3__c; else FField[2] = '';\n        if(ConfigVar.Filter_Field_4__c !=null) FField[3] = ConfigVar.Filter_Field_4__c; else FField[3] = '';\n        if(ConfigVar.Filter_Field_5__c !=null) FField[4] = ConfigVar.Filter_Field_5__c; else FField[4] =",
			"Config.get('Filter_Field_1__c')"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/classes/Travel_Group_Helper.cls",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1754,
						"regions":
						{
						},
						"selection":
						[
							[
								928,
								928
							]
						],
						"settings":
						{
							"syntax": "Packages/MavensMate/sublime/lang/Apex.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/classes/Recalculate_Next_Payment_Date_Scheduled.cls",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 419,
						"regions":
						{
						},
						"selection":
						[
							[
								419,
								419
							]
						],
						"settings":
						{
							"syntax": "Packages/MavensMate/sublime/lang/Apex.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/classes/Recalculate_Next_Payment_Date_Batch.cls",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 748,
						"regions":
						{
						},
						"selection":
						[
							[
								140,
								140
							]
						],
						"settings":
						{
							"syntax": "Packages/MavensMate/sublime/lang/Apex.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/classes/Helper_Class.cls",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3085,
						"regions":
						{
						},
						"selection":
						[
							[
								2500,
								2500
							]
						],
						"settings":
						{
							"syntax": "Packages/MavensMate/sublime/lang/Apex.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/classes/Recalaulate_Next_Payment_Date_Test.cls",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1169,
						"regions":
						{
						},
						"selection":
						[
							[
								1082,
								1082
							]
						],
						"settings":
						{
							"syntax": "Packages/MavensMate/sublime/lang/Apex.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/classes/Test_Data_Factory.cls",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2396,
						"regions":
						{
						},
						"selection":
						[
							[
								2393,
								2393
							]
						],
						"settings":
						{
							"syntax": "Packages/MavensMate/sublime/lang/Apex.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 671.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1921,
						"regions":
						{
						},
						"selection":
						[
							[
								1584,
								1519
							]
						],
						"settings":
						{
							"auto_name": "@isTest(SeeAllData=true)",
							"syntax": "Packages/MavensMate/sublime/lang/Apex.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5442,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								5442
							]
						],
						"settings":
						{
							"auto_name": "/*",
							"syntax": "Packages/MavensMate/sublime/lang/Apex.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3804,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								3804
							]
						],
						"settings":
						{
							"auto_name": "@isTest(SeeAllData=false)",
							"syntax": "Packages/MavensMate/sublime/lang/Apex.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3812,
						"regions":
						{
						},
						"selection":
						[
							[
								3812,
								3812
							]
						],
						"settings":
						{
							"auto_name": "public class ServiceHelper {",
							"syntax": "Packages/MavensMate/sublime/lang/Apex.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.MavensMate-OutputPanel":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Antips Sandbox.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"src/classes/Booking_Passenger_Trigger_Helper.cls"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 302.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
